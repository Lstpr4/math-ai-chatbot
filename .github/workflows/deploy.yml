name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main  # Set this to the branch you want to deploy from

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Setup Pages
        uses: actions/configure-pages@v3
        
      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install Dependencies
        run: |
          pip install flask flask-cors
          if [ -f backend/requirements.txt ]; then
            pip install -r backend/requirements.txt
          fi
      
      - name: Prepare static files
        run: |
          # Create a deployment directory
          mkdir -p dist
          
          # Copy frontend files
          cp -r frontend/* dist/
          
          # Create a static JSON data file for formulas
          python -c "import json; import os; os.makedirs('dist/data', exist_ok=True); json.dump(json.load(open('data/expanded_formulas.json')), open('dist/data/expanded_formulas.json', 'w'))"
          
          # Create service worker to provide offline access
          echo 'self.addEventListener("fetch", function(event) { event.respondWith(fetch(event.request)); });' > dist/sw.js
          
          # Add a note that this is the static version
          echo '<script>console.log("Static GitHub Pages version - API calls will not work");</script>' >> dist/index.html
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: 'dist'
          
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
